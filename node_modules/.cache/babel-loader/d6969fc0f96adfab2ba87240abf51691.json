{"ast":null,"code":"var _jsxFileName = \"/Users/jonesveriatohoffstetter/ReactJs/conversor_react/src/components/Conversor.js\";\nimport React, { Component } from 'react';\nimport './Conversor.css';\nimport intl from 'react-intl-universal';\nconst locales = {\n  'pt-BR': require('../locales/pt-BR.json'),\n  'en-US': require('../locales/en-US.json')\n};\n\nclass Conversor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.convert();\n    };\n\n    this.convert = () => {\n      let typedVal = this.state.moedaA_valor;\n      let ls = localStorage.getItem('cot');\n      let json = JSON.parse(ls);\n\n      if (this.props.moedaA === 'USD') {\n        let cot1 = parseFloat(json.USD_BRL.val).toFixed(2);\n        let moedaB_valor = parseFloat(typedVal * cot1);\n        this.setState({\n          moedaB_valor\n        });\n      } else {\n        let cot1 = parseFloat(json.EUR_BRL.val).toFixed(2);\n        let moedaB_valor = parseFloat(typedVal * cot1);\n        this.setState({\n          moedaB_valor\n        });\n      }\n      /*\n      let from_to = `${this.props.moedaA}_${this.props.moedaB}`\n      let url = `https://free.currconv.com/api/v7/convert?apiKey=02a0baf4414a654a31db&q=${from_to}&compact=y`\n       fetch(url)\n        .then(res => {\n          return res.json()\n        })\n        .then(json => {\n          //console.log(json)\n          let cot = json[from_to].val\n          let moedaB_valor = parseFloat(typedVal * cot)\n          this.setState({ moedaB_valor })\n        })\n        */\n\n    };\n\n    this.maskValue = i => {\n      var v = i.replace(/\\D/g, '');\n      v = (v / 100).toFixed(2) + '';\n      v = v.replace('.', ',');\n      v = v.replace(/(\\d)(\\d{1})(\\d{}),/g, '$1.$2.$3,');\n      v = v.replace(/(\\d)(\\d{3}),/g, '$1.$2,');\n      return v;\n    };\n\n    this.getVal = () => {\n      let valStr = this.maskValue(this.state.moedaA_valor);\n      return valStr;\n    };\n\n    this.setRes = () => {\n      let val = this.maskValue(this.state.moedaB_valor); //let val = this.state.moedaB_valorStr\n\n      return val.toFixed(2);\n    };\n\n    this.state = {\n      moedaA_valor: 1,\n      //para calcular\n      moedaB_valor: 0\n    };\n    const currentLocale = locales[navigator.language] ? navigator.language : 'pt-BR';\n    intl.init({\n      currentLocale,\n      locales\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, this.props.moedaA, \" -> \", this.props.moedaB)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"number\",\n      inputmode: \"number\",\n      pattern: \"[0-9]+$\" //value={this.getVal()}\n      ,\n      value: this.state.moedaA_valor,\n      onChange: event => {\n        event.persist();\n        let ev = event;\n        var val = ev.target.value;\n        this.setState({\n          moedaA_valor: val\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"button\",\n      value: intl.get('btn.convert'),\n      onClick: this.convert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"result\" //value={this.setRes()}\n      ,\n      value: this.state.moedaB_valor.toFixed(2),\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Conversor;","map":{"version":3,"sources":["/Users/jonesveriatohoffstetter/ReactJs/conversor_react/src/components/Conversor.js"],"names":["React","Component","intl","locales","require","Conversor","constructor","props","componentDidMount","convert","typedVal","state","moedaA_valor","ls","localStorage","getItem","json","JSON","parse","moedaA","cot1","parseFloat","USD_BRL","val","toFixed","moedaB_valor","setState","EUR_BRL","maskValue","i","v","replace","getVal","valStr","setRes","currentLocale","navigator","language","init","render","moedaB","event","persist","ev","target","value","get"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Conversor.css'\nimport intl from 'react-intl-universal'\n\nconst locales = {\n  'pt-BR': require('../locales/pt-BR.json'),\n  'en-US': require('../locales/en-US.json')\n}\n\nclass Conversor extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      moedaA_valor: 1, //para calcular\n      moedaB_valor: 0\n    }\n\n    const currentLocale = locales[navigator.language]\n      ? navigator.language\n      : 'pt-BR'\n\n    intl.init({\n      currentLocale,\n      locales\n    })\n  }\n\n  componentDidMount = () => {\n    this.convert()\n  }\n\n  convert = () => {\n    let typedVal = this.state.moedaA_valor\n    let ls = localStorage.getItem('cot')\n    let json = JSON.parse(ls)\n    if (this.props.moedaA === 'USD') {\n      let cot1 = parseFloat(json.USD_BRL.val).toFixed(2)\n      let moedaB_valor = parseFloat(typedVal * cot1)\n      this.setState({ moedaB_valor })\n    } else {\n      let cot1 = parseFloat(json.EUR_BRL.val).toFixed(2)\n      let moedaB_valor = parseFloat(typedVal * cot1)\n      this.setState({ moedaB_valor })\n    }\n\n    /*\n    let from_to = `${this.props.moedaA}_${this.props.moedaB}`\n    let url = `https://free.currconv.com/api/v7/convert?apiKey=02a0baf4414a654a31db&q=${from_to}&compact=y`\n\n    fetch(url)\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        //console.log(json)\n        let cot = json[from_to].val\n        let moedaB_valor = parseFloat(typedVal * cot)\n        this.setState({ moedaB_valor })\n      })\n      */\n  }\n\n  maskValue = i => {\n    var v = i.replace(/\\D/g, '')\n    v = (v / 100).toFixed(2) + ''\n    v = v.replace('.', ',')\n    v = v.replace(/(\\d)(\\d{1})(\\d{}),/g, '$1.$2.$3,')\n    v = v.replace(/(\\d)(\\d{3}),/g, '$1.$2,')\n    return v\n  }\n\n  getVal = () => {\n    let valStr = this.maskValue(this.state.moedaA_valor)\n    return valStr\n  }\n\n  setRes = () => {\n    let val = this.maskValue(this.state.moedaB_valor)\n    //let val = this.state.moedaB_valorStr\n    return val.toFixed(2)\n  }\n\n  render () {\n    return (\n      <div className='conversor'>\n        <div className='title2'>\n          <h2>\n            {this.props.moedaA} -> {this.props.moedaB}\n          </h2>\n        </div>\n        <div className='inputs'>\n          <input\n            className='input'\n            type='number'\n            inputmode=\"number\"\n            pattern='[0-9]+$'\n            //value={this.getVal()}\n            value={this.state.moedaA_valor}\n            onChange={event => {\n              event.persist()\n              let ev = event\n              var val = ev.target.value\n              this.setState({ moedaA_valor: val })\n            }}\n          ></input>\n          <input\n            className='btn'\n            type='button'\n            value={intl.get('btn.convert')}\n            onClick={this.convert}\n          ></input>\n          <input\n            className='result'\n            //value={this.setRes()}\n            value={this.state.moedaB_valor.toFixed(2)}\n            disabled={true}\n          ></input>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Conversor\n"]},"metadata":{},"sourceType":"module"}