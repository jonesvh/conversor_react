{"ast":null,"code":"var _jsxFileName = \"/Users/jonesveriatohoffstetter/ReactJs/conversor_react/src/components/Conversor.js\";\nimport React, { Component } from 'react';\nimport './Conversor.css';\nimport intl from 'react-intl-universal';\nconst locales = {\n  'pt-BR': require('../locales/pt-BR.json'),\n  'en-US': require('../locales/en-US.json')\n};\n\nclass Conversor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.convert();\n    };\n\n    this.convert = () => {\n      let typedVal = this.state.moedaA_valor;\n      let valNumber = typedVal / 100; //typedVal = typedVal.replace(',', '.')\n      //typedVal *= 10\n      //typedVal = typedVal.toString().replace('.', ',')\n      //console.log(this.state.moedaA_valor, typedVal)\n\n      let from_to = `${this.props.moedaA}_${this.props.moedaB}`;\n      let url = `https://free.currconv.com/api/v7/convert?apiKey=02a0baf4414a654a31db&q=${from_to}&compact=y`;\n      fetch(url).then(res => {\n        return res.json();\n      }).then(json => {\n        //console.log(json)\n        let cot = json[from_to].val;\n        let moedaB_valor = parseFloat(valNumber * cot);\n        this.setState({\n          moedaB_valor\n        });\n      });\n    };\n\n    this.maskValue = i => {\n      var v = i.replace(/\\D/g, '');\n      v = (v / 100).toFixed(2) + '';\n      v = v.replace('.', ',');\n      v = v.replace(/(\\d)(\\d{3})(\\d{3}),/g, '$1.$2.$3,');\n      v = v.replace(/(\\d)(\\d{3}),/g, '$1.$2,');\n      return v;\n    };\n\n    this.getVal = () => {\n      let valStr = this.maskValue(this.state.moedaA_valor);\n      return valStr;\n    };\n\n    this.setRes = () => {\n      let val = this.maskValue(this.state.moedaB_valor); //let val = this.state.moedaB_valorStr\n\n      return val.toFixed(2);\n    };\n\n    this.state = {\n      moedaA_valor: '1,00',\n      //para calcular\n      moedaB_valor: 0\n    };\n    const currentLocale = locales[navigator.language] ? navigator.language : 'pt-BR';\n    intl.init({\n      currentLocale,\n      locales\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, this.props.moedaA, \" -> \", this.props.moedaB)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      value: this.getVal() //value={this.state.moedaA_valor}\n      ,\n      onChange: event => {\n        event.persist();\n        let ev = event;\n        var val = ev.target.value;\n        this.setState({\n          moedaA_valor: val\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"button\",\n      value: intl.get(\"btn.convert\"),\n      onClick: this.convert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"result\" //value={this.setRes()}\n      ,\n      value: this.state.moedaB_valor.toFixed(2),\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Conversor;","map":{"version":3,"sources":["/Users/jonesveriatohoffstetter/ReactJs/conversor_react/src/components/Conversor.js"],"names":["React","Component","intl","locales","require","Conversor","constructor","props","componentDidMount","convert","typedVal","state","moedaA_valor","valNumber","from_to","moedaA","moedaB","url","fetch","then","res","json","cot","val","moedaB_valor","parseFloat","setState","maskValue","i","v","replace","toFixed","getVal","valStr","setRes","currentLocale","navigator","language","init","render","event","persist","ev","target","value","get"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Conversor.css'\nimport intl from 'react-intl-universal';\n\nconst locales = {\n  'pt-BR': require('../locales/pt-BR.json'),\n  'en-US': require('../locales/en-US.json')\n}\n\nclass Conversor extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      moedaA_valor: '1,00', //para calcular\n      moedaB_valor: 0\n    }\n\n    const currentLocale = locales[navigator.language]\n      ? navigator.language\n      : 'pt-BR'\n\n    intl.init({\n      currentLocale,\n      locales\n    })\n  }\n\n  componentDidMount = () =>{\n    this.convert()\n  }\n\n  convert = () => {\n    \n    let typedVal = this.state.moedaA_valor\n\n    let valNumber = typedVal / 100\n    //typedVal = typedVal.replace(',', '.')\n    //typedVal *= 10\n    //typedVal = typedVal.toString().replace('.', ',')\n\n    //console.log(this.state.moedaA_valor, typedVal)\n\n    let from_to = `${this.props.moedaA}_${this.props.moedaB}`\n    let url = `https://free.currconv.com/api/v7/convert?apiKey=02a0baf4414a654a31db&q=${from_to}&compact=y`\n\n    fetch(url)\n      .then(res => {\n        return res.json()\n      })\n      .then(json => {\n        //console.log(json)\n        let cot = json[from_to].val\n        let moedaB_valor = parseFloat(valNumber * cot)\n        this.setState({ moedaB_valor })\n      })\n  }\n\n  maskValue = i => {\n    var v = i.replace(/\\D/g, '')\n    v = (v / 100).toFixed(2) + ''\n    v = v.replace('.', ',')\n    v = v.replace(/(\\d)(\\d{3})(\\d{3}),/g, '$1.$2.$3,')\n    v = v.replace(/(\\d)(\\d{3}),/g, '$1.$2,')\n    return v\n  }\n\n  getVal = () => {\n    let valStr = this.maskValue(this.state.moedaA_valor)\n    return valStr\n  }\n\n  setRes = () => {\n    let val = this.maskValue(this.state.moedaB_valor)\n    //let val = this.state.moedaB_valorStr\n    return val.toFixed(2)\n  }\n\n  render () {\n    return (\n      <div className='conversor'>\n        <div className='title2'>\n          <h2>\n            {this.props.moedaA} -> {this.props.moedaB}\n          </h2>\n        </div>\n        <div className='inputs'>\n          <input\n            className='input'\n            type='text'\n            value={this.getVal()}\n            //value={this.state.moedaA_valor}\n            onChange={event => {\n              event.persist()\n              let ev = event\n              var val = ev.target.value\n              this.setState({ moedaA_valor: val })\n            }}\n          ></input>\n          <input\n            className='btn'\n            type='button'\n            value={intl.get(\"btn.convert\")}\n            onClick={this.convert}\n          ></input>\n          <input\n            className='result'\n            //value={this.setRes()}\n            value={this.state.moedaB_valor.toFixed(2)}\n            disabled={true}\n          ></input>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Conversor\n"]},"metadata":{},"sourceType":"module"}